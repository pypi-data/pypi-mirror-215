from TransformsAI.Animo.Learning.Sensors.Primitives import VectorSensor
from TransformsAI.Animo.Learning.Sensors import SensorConfig, SensorSpec
from TransformsAI.Animo.Numerics import Vec3Int
from System import Array_1, Span_1
from TransformsAI.Animo.Objects.Character import CharacterObject

class CellSensor(VectorSensor):
    sensorConfig : SensorConfig
    @property
    def AbsolutePosition(self) -> Vec3Int: ...
    @AbsolutePosition.setter
    def AbsolutePosition(self, value: Vec3Int) -> Vec3Int: ...
    @property
    def Length(self) -> int: ...
    @property
    def OptionKeys(self) -> Array_1[str]: ...
    @property
    def SensorSpec(self) -> SensorSpec: ...


class ObjectPropertiesAndTerrainAtCellSensor(CellSensor):
    def __init__(self, sensorConfig: SensorConfig) -> None: ...
    sensorConfig : SensorConfig
    @property
    def AbsolutePosition(self) -> Vec3Int: ...
    @AbsolutePosition.setter
    def AbsolutePosition(self, value: Vec3Int) -> Vec3Int: ...
    @property
    def Length(self) -> int: ...
    @property
    def OptionKeys(self) -> Array_1[str]: ...
    @property
    def SensorSpec(self) -> SensorSpec: ...
    def GetObservations(self, character: CharacterObject, values: Span_1[float]) -> None: ...


class ObjectPropertiesAtCellSensor(CellSensor):
    def __init__(self, sensorConfig: SensorConfig) -> None: ...
    sensorConfig : SensorConfig
    @property
    def AbsolutePosition(self) -> Vec3Int: ...
    @AbsolutePosition.setter
    def AbsolutePosition(self, value: Vec3Int) -> Vec3Int: ...
    @property
    def Length(self) -> int: ...
    @property
    def OptionKeys(self) -> Array_1[str]: ...
    @property
    def SensorSpec(self) -> SensorSpec: ...
    def GetObservations(self, character: CharacterObject, values: Span_1[float]) -> None: ...


class ObjectTypesAndTerrainAtCellSensor(CellSensor):
    def __init__(self, sensorConfig: SensorConfig) -> None: ...
    sensorConfig : SensorConfig
    @property
    def AbsolutePosition(self) -> Vec3Int: ...
    @AbsolutePosition.setter
    def AbsolutePosition(self, value: Vec3Int) -> Vec3Int: ...
    @property
    def Length(self) -> int: ...
    @property
    def OptionKeys(self) -> Array_1[str]: ...
    @property
    def SensorSpec(self) -> SensorSpec: ...
    def GetObservations(self, character: CharacterObject, values: Span_1[float]) -> None: ...


class ObjectTypesAtCellSensor(CellSensor):
    def __init__(self, sensorConfig: SensorConfig) -> None: ...
    sensorConfig : SensorConfig
    @property
    def AbsolutePosition(self) -> Vec3Int: ...
    @AbsolutePosition.setter
    def AbsolutePosition(self, value: Vec3Int) -> Vec3Int: ...
    @property
    def Length(self) -> int: ...
    @property
    def OptionKeys(self) -> Array_1[str]: ...
    @property
    def SensorSpec(self) -> SensorSpec: ...
    def GetObservations(self, character: CharacterObject, values: Span_1[float]) -> None: ...


class TerrainAtCellSensor(CellSensor):
    def __init__(self, sensorConfig: SensorConfig) -> None: ...
    sensorConfig : SensorConfig
    @property
    def AbsolutePosition(self) -> Vec3Int: ...
    @AbsolutePosition.setter
    def AbsolutePosition(self, value: Vec3Int) -> Vec3Int: ...
    @property
    def Length(self) -> int: ...
    @property
    def OptionKeys(self) -> Array_1[str]: ...
    @property
    def SensorSpec(self) -> SensorSpec: ...
    def GetObservations(self, character: CharacterObject, values: Span_1[float]) -> None: ...

