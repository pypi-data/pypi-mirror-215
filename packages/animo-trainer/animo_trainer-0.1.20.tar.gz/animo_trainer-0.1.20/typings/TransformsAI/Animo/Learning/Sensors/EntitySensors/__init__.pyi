from TransformsAI.Animo.Learning.Sensors import SensorConfig, SensorSpec
from System import Array_1, Span_1
from TransformsAI.Animo.Grid import GridObject
from TransformsAI.Animo.Objects import Character
from TransformsAI.Animo.Learning.Sensors.Primitives import VectorSensor

class EntityPropertiesAndRelPosSensor(EntitySensor):
    def __init__(self, sensorConfig: SensorConfig) -> None: ...
    sensorConfig : SensorConfig
    @property
    def Length(self) -> int: ...
    @property
    def OptionKeys(self) -> Array_1[str]: ...
    @property
    def SensedEntity(self) -> GridObject: ...
    @SensedEntity.setter
    def SensedEntity(self, value: GridObject) -> GridObject: ...
    @property
    def SensorSpec(self) -> SensorSpec: ...
    def GetObservations(self, character: Character, values: Span_1[float]) -> None: ...


class EntitySensor(VectorSensor):
    sensorConfig : SensorConfig
    @property
    def Length(self) -> int: ...
    @property
    def OptionKeys(self) -> Array_1[str]: ...
    @property
    def SensedEntity(self) -> GridObject: ...
    @SensedEntity.setter
    def SensedEntity(self, value: GridObject) -> GridObject: ...
    @property
    def SensorSpec(self) -> SensorSpec: ...


class EntityTypeAndRelPosSensor(EntitySensor):
    def __init__(self, sensorConfig: SensorConfig) -> None: ...
    sensorConfig : SensorConfig
    @property
    def Length(self) -> int: ...
    @property
    def OptionKeys(self) -> Array_1[str]: ...
    @property
    def SensedEntity(self) -> GridObject: ...
    @SensedEntity.setter
    def SensedEntity(self, value: GridObject) -> GridObject: ...
    @property
    def SensorSpec(self) -> SensorSpec: ...
    def GetObservations(self, character: Character, values: Span_1[float]) -> None: ...

