include:
  - project: romaiiiinnn/cicd
    ref: main
    file:
      - container/hadolint.yml
      - container/docker.yml

variables:
  SOURCE_DIR: blopic
  MODULE_NAME: ${SOURCE_DIR}
  IMAGE_NAME: ${DOCKERHUB_USER}/${MODULE_NAME}
  REGISTRY_USER: ${DOCKERHUB_USER}
  REGISTRY_PASSWORD: ${DOCKERHUB_TOKEN}
  REGISTRY_ADDRESS: ""

stages:
  - test
  - build
  - deploy
  - release

flake8:
  stage: test
  image:
    name: alpine/flake8
    entrypoint: [""]
  script:
    - flake8 --ignore=E501 ${SOURCE_DIR}

isort:
  stage: test
  image: xcgd/isort
  script:
    - isort -c ${SOURCE_DIR}

## Container
build container:
  extends: .build_dryrun

build & push container:
  extends: .build_and_push_tags
  variables:
    PUSH_LATEST: "true"

## Build package
build package:
  stage: build
  image: python:3.11-alpine
  before_script:
    - apk update && apk add git
    - pip install --upgrade build
  script:
    - python -m build
  artifacts:
    paths:
      - dist/*
    expire_in: 1h

## Upload binary to PyPi
deploy package:
  stage: deploy
  image: python:3.11-alpine
  needs:
    - job: build package
      artifacts: true
  before_script:
    - pip install --upgrade twine
  script:
    - twine upload --non-interactive --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD} dist/*
  only:
    - tags

## Create a Gitlab release
release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  only:
    - tags
  needs:
    - deploy package
    - build & push container
  variables:
    PYPI_PROJECT_NAME: ${MODULE_NAME}
  script:
    - echo "Running the release job."
  release:
    tag_name: $CI_COMMIT_TAG
    name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG_MESSAGE'
    assets:
      links:
        - name: ${PYPI_PROJECT_NAME} package
          url: https://pypi.org/project/${PYPI_PROJECT_NAME}/${CI_COMMIT_TAG}/
          link_type: 'package'
        - name: ${PYPI_PROJECT_NAME} container
          url: https://hub.docker.com/r/${IMAGE_NAME}/tags?name=${CI_COMMIT_TAG}
          link_type: 'image'
