"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import aserto.directory.reader.v2.reader_pb2
import grpc

class ReaderStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetObjectType: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.GetObjectTypeRequest,
        aserto.directory.reader.v2.reader_pb2.GetObjectTypeResponse,
    ]
    """object type metadata methods"""
    GetObjectTypes: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.GetObjectTypesRequest,
        aserto.directory.reader.v2.reader_pb2.GetObjectTypesResponse,
    ]
    GetRelationType: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.GetRelationTypeRequest,
        aserto.directory.reader.v2.reader_pb2.GetRelationTypeResponse,
    ]
    """relation type metadata methods"""
    GetRelationTypes: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.GetRelationTypesRequest,
        aserto.directory.reader.v2.reader_pb2.GetRelationTypesResponse,
    ]
    GetPermission: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.GetPermissionRequest,
        aserto.directory.reader.v2.reader_pb2.GetPermissionResponse,
    ]
    """permission metadata methods"""
    GetPermissions: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.GetPermissionsRequest,
        aserto.directory.reader.v2.reader_pb2.GetPermissionsResponse,
    ]
    GetObject: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.GetObjectRequest,
        aserto.directory.reader.v2.reader_pb2.GetObjectResponse,
    ]
    """object methods"""
    GetObjectMany: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.GetObjectManyRequest,
        aserto.directory.reader.v2.reader_pb2.GetObjectManyResponse,
    ]
    GetObjects: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.GetObjectsRequest,
        aserto.directory.reader.v2.reader_pb2.GetObjectsResponse,
    ]
    GetRelation: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.GetRelationRequest,
        aserto.directory.reader.v2.reader_pb2.GetRelationResponse,
    ]
    """relation methods"""
    GetRelations: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.GetRelationsRequest,
        aserto.directory.reader.v2.reader_pb2.GetRelationsResponse,
    ]
    CheckPermission: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.CheckPermissionRequest,
        aserto.directory.reader.v2.reader_pb2.CheckPermissionResponse,
    ]
    """check methods"""
    CheckRelation: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.CheckRelationRequest,
        aserto.directory.reader.v2.reader_pb2.CheckRelationResponse,
    ]
    GetGraph: grpc.UnaryUnaryMultiCallable[
        aserto.directory.reader.v2.reader_pb2.GetGraphRequest,
        aserto.directory.reader.v2.reader_pb2.GetGraphResponse,
    ]
    """graph methods"""

class ReaderServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetObjectType(
        self,
        request: aserto.directory.reader.v2.reader_pb2.GetObjectTypeRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.GetObjectTypeResponse:
        """object type metadata methods"""
    @abc.abstractmethod
    def GetObjectTypes(
        self,
        request: aserto.directory.reader.v2.reader_pb2.GetObjectTypesRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.GetObjectTypesResponse: ...
    @abc.abstractmethod
    def GetRelationType(
        self,
        request: aserto.directory.reader.v2.reader_pb2.GetRelationTypeRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.GetRelationTypeResponse:
        """relation type metadata methods"""
    @abc.abstractmethod
    def GetRelationTypes(
        self,
        request: aserto.directory.reader.v2.reader_pb2.GetRelationTypesRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.GetRelationTypesResponse: ...
    @abc.abstractmethod
    def GetPermission(
        self,
        request: aserto.directory.reader.v2.reader_pb2.GetPermissionRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.GetPermissionResponse:
        """permission metadata methods"""
    @abc.abstractmethod
    def GetPermissions(
        self,
        request: aserto.directory.reader.v2.reader_pb2.GetPermissionsRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.GetPermissionsResponse: ...
    @abc.abstractmethod
    def GetObject(
        self,
        request: aserto.directory.reader.v2.reader_pb2.GetObjectRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.GetObjectResponse:
        """object methods"""
    @abc.abstractmethod
    def GetObjectMany(
        self,
        request: aserto.directory.reader.v2.reader_pb2.GetObjectManyRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.GetObjectManyResponse: ...
    @abc.abstractmethod
    def GetObjects(
        self,
        request: aserto.directory.reader.v2.reader_pb2.GetObjectsRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.GetObjectsResponse: ...
    @abc.abstractmethod
    def GetRelation(
        self,
        request: aserto.directory.reader.v2.reader_pb2.GetRelationRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.GetRelationResponse:
        """relation methods"""
    @abc.abstractmethod
    def GetRelations(
        self,
        request: aserto.directory.reader.v2.reader_pb2.GetRelationsRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.GetRelationsResponse: ...
    @abc.abstractmethod
    def CheckPermission(
        self,
        request: aserto.directory.reader.v2.reader_pb2.CheckPermissionRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.CheckPermissionResponse:
        """check methods"""
    @abc.abstractmethod
    def CheckRelation(
        self,
        request: aserto.directory.reader.v2.reader_pb2.CheckRelationRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.CheckRelationResponse: ...
    @abc.abstractmethod
    def GetGraph(
        self,
        request: aserto.directory.reader.v2.reader_pb2.GetGraphRequest,
        context: grpc.ServicerContext,
    ) -> aserto.directory.reader.v2.reader_pb2.GetGraphResponse:
        """graph methods"""

def add_ReaderServicer_to_server(servicer: ReaderServicer, server: grpc.Server) -> None: ...
