Metadata-Version: 2.1
Name: py-jokes-py
Version: 1.1.3
Summary: Python wrapper for jokes APIs provided by icanhazdadjokes.com and jokeapi.dev
Home-page: https://github.com/LoisaKitakaya/Jokes
Keywords: python,jokes,api,dad jokes
Author: Freedom Loisa
Author-email: kitakayaloisa@gmail.com
Requires-Python: >=3.9,<4.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: requests (>=2.31.0,<3.0.0)
Project-URL: Documentation, https://github.com/LoisaKitakaya/Jokes#readme
Description-Content-Type: text/markdown

# py-jokes-py

Python wrapper for the jokes APIs provided by:

- [icanhazdadjokes.com](https://icanhazdadjoke.com/)
- [jokeapi.dev](https://jokeapi.dev/)

## How to install

```
pip install py-jokes-py
```

## Usage

Something to note, the `jokes` module has two classes:

- `DadJokes()` - wrapper for [icanhazdadjokes.com](https://icanhazdadjoke.com/) api
- `AllJokes()` - wrapper for [jokeapi.dev](https://jokeapi.dev/) api

##### Class `DadJokes()`

This class provides the following methods:

- `random_joke_as_json(self)`
- `random_joke_as_text(self)`
- `specific_joke_as_json(self, id)`
- `specific_joke_as_text(self, id)`
- `list_jokes_as_json(self, page, limit, term)`
- `list_jokes_as_text(self, page, limit, term)`

##### Class `AllJokes()`

This class inherits from the `DadJokes` class, but also provides the following methods:

- `get_joke_json(self, joke_lang, joke_category, joke_flags, joke_type, joke_contains, joke_id, joke_amount)`
- `get_joke_text(self, joke_lang, joke_category, joke_flags, joke_type, joke_contains, joke_id, joke_amount)`

#### Basic Usage

```
from jokes.jokesv2 import AllJokes

jokes = AllJokes()

joke = jokes.get_joke_json()
print(joke)

joke = jokes.get_joke_text()
print(joke)

joke = jokes.random_joke_as_json()
print(joke)

joke = jokes.random_joke_as_text()
print(joke)

joke = jokes.specific_joke_as_json(id="12")
print(joke)

joke = jokes.specific_joke_as_text(id="12")
print(joke)

joke = jokes.list_jokes_as_json()
print(joke)

joke = jokes.list_jokes_as_text()
print(joke)
```

## Example

Here is a simple implementation of this package. Check it out:

- [jokes_cli](https://github.com/LoisaKitakaya/jokes_cli)

## Contribution

If you want to contribute to this project, here are some few steps you can follow:

- Fork this project's repository
- Clone it to your local machine
- Make the changes you want to make or add the features you want to add
- Write tests for the new features
- Make a pull request

That's just about it.

## Issues

For any issus encountered while using this package, feel free to submit a new issue [here](https://github.com/LoisaKitakaya/Jokes/issues).

Enjoy! ðŸ¤ª
