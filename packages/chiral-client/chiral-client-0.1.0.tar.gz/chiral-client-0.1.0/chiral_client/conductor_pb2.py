# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: conductor.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0f\x63onductor.proto\x12\x1a\x63hiral_orchestra_conductor\"\x1f\n\x0fRequestSendData\x12\x0c\n\x04task\x18\x01 \x01(\t\"-\n\rReplySendData\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0b\n\x03\x64oc\x18\x02 \x01(\t\"\"\n\x10RequestJobResult\x12\x0e\n\x06job_id\x18\x01 \x01(\t\"0\n\x0eReplyJobResult\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x0e\n\x06result\x18\x02 \x01(\t\"#\n\x10RequestJobStatus\x12\x0f\n\x07job_ids\x18\x01 \x03(\t\"\x8d\x01\n\x0eReplyJobStatus\x12J\n\x08statuses\x18\x01 \x03(\x0b\x32\x38.chiral_orchestra_conductor.ReplyJobStatus.StatusesEntry\x1a/\n\rStatusesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x1b\n\x19RequestCompletedJobStatus\"\x9f\x01\n\x17ReplyCompletedJobStatus\x12S\n\x08statuses\x18\x01 \x03(\x0b\x32\x41.chiral_orchestra_conductor.ReplyCompletedJobStatus.StatusesEntry\x1a/\n\rStatusesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x1c\n\x1aRequestProcessingJobStatus\"\xa1\x01\n\x18ReplyProcessingJobStatus\x12T\n\x08statuses\x18\x01 \x03(\x0b\x32\x42.chiral_orchestra_conductor.ReplyProcessingJobStatus.StatusesEntry\x1a/\n\rStatusesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\",\n\x13RequestSetDividends\x12\x15\n\rnew_dividends\x18\x01 \x01(\x04\"$\n\x11ReplySetDividends\x12\x0f\n\x07success\x18\x01 \x01(\x08\"#\n\x10RequestAcceptJob\x12\x0f\n\x07job_req\x18\x01 \x01(\t\" \n\x0eReplyAcceptJob\x12\x0e\n\x06job_id\x18\x01 \x01(\t\"&\n\x11RequestAssignTask\x12\x11\n\tplayer_id\x18\x01 \x01(\t\"0\n\x0fReplyAssignTask\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0c\n\x04task\x18\x02 \x01(\t\"F\n\x13RequestCompleteTask\x12\x11\n\tplayer_id\x18\x01 \x01(\t\x12\x0c\n\x04task\x18\x02 \x01(\t\x12\x0e\n\x06result\x18\x03 \x01(\t\"-\n\x11ReplyCompleteTask\x12\x18\n\x10is_job_completed\x18\x01 \x01(\x08\x32\xa6\x07\n\x18\x43hiralOrchestraConductor\x12j\n\nAssignTask\x12-.chiral_orchestra_conductor.RequestAssignTask\x1a+.chiral_orchestra_conductor.ReplyAssignTask\"\x00\x12p\n\x0c\x43ompleteTask\x12/.chiral_orchestra_conductor.RequestCompleteTask\x1a-.chiral_orchestra_conductor.ReplyCompleteTask\"\x00\x12\x64\n\x08SendData\x12+.chiral_orchestra_conductor.RequestSendData\x1a).chiral_orchestra_conductor.ReplySendData\"\x00\x12g\n\tAcceptJob\x12,.chiral_orchestra_conductor.RequestAcceptJob\x1a*.chiral_orchestra_conductor.ReplyAcceptJob\"\x00\x12g\n\tJobStatus\x12,.chiral_orchestra_conductor.RequestJobStatus\x1a*.chiral_orchestra_conductor.ReplyJobStatus\"\x00\x12g\n\tJobResult\x12,.chiral_orchestra_conductor.RequestJobResult\x1a*.chiral_orchestra_conductor.ReplyJobResult\"\x00\x12\x82\x01\n\x12\x43ompletedJobStatus\x12\x35.chiral_orchestra_conductor.RequestCompletedJobStatus\x1a\x33.chiral_orchestra_conductor.ReplyCompletedJobStatus\"\x00\x12\x85\x01\n\x13ProcessingJobStatus\x12\x36.chiral_orchestra_conductor.RequestProcessingJobStatus\x1a\x34.chiral_orchestra_conductor.ReplyProcessingJobStatus\"\x00\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'conductor_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _REPLYJOBSTATUS_STATUSESENTRY._options = None
  _REPLYJOBSTATUS_STATUSESENTRY._serialized_options = b'8\001'
  _REPLYCOMPLETEDJOBSTATUS_STATUSESENTRY._options = None
  _REPLYCOMPLETEDJOBSTATUS_STATUSESENTRY._serialized_options = b'8\001'
  _REPLYPROCESSINGJOBSTATUS_STATUSESENTRY._options = None
  _REPLYPROCESSINGJOBSTATUS_STATUSESENTRY._serialized_options = b'8\001'
  _REQUESTSENDDATA._serialized_start=47
  _REQUESTSENDDATA._serialized_end=78
  _REPLYSENDDATA._serialized_start=80
  _REPLYSENDDATA._serialized_end=125
  _REQUESTJOBRESULT._serialized_start=127
  _REQUESTJOBRESULT._serialized_end=161
  _REPLYJOBRESULT._serialized_start=163
  _REPLYJOBRESULT._serialized_end=211
  _REQUESTJOBSTATUS._serialized_start=213
  _REQUESTJOBSTATUS._serialized_end=248
  _REPLYJOBSTATUS._serialized_start=251
  _REPLYJOBSTATUS._serialized_end=392
  _REPLYJOBSTATUS_STATUSESENTRY._serialized_start=345
  _REPLYJOBSTATUS_STATUSESENTRY._serialized_end=392
  _REQUESTCOMPLETEDJOBSTATUS._serialized_start=394
  _REQUESTCOMPLETEDJOBSTATUS._serialized_end=421
  _REPLYCOMPLETEDJOBSTATUS._serialized_start=424
  _REPLYCOMPLETEDJOBSTATUS._serialized_end=583
  _REPLYCOMPLETEDJOBSTATUS_STATUSESENTRY._serialized_start=345
  _REPLYCOMPLETEDJOBSTATUS_STATUSESENTRY._serialized_end=392
  _REQUESTPROCESSINGJOBSTATUS._serialized_start=585
  _REQUESTPROCESSINGJOBSTATUS._serialized_end=613
  _REPLYPROCESSINGJOBSTATUS._serialized_start=616
  _REPLYPROCESSINGJOBSTATUS._serialized_end=777
  _REPLYPROCESSINGJOBSTATUS_STATUSESENTRY._serialized_start=345
  _REPLYPROCESSINGJOBSTATUS_STATUSESENTRY._serialized_end=392
  _REQUESTSETDIVIDENDS._serialized_start=779
  _REQUESTSETDIVIDENDS._serialized_end=823
  _REPLYSETDIVIDENDS._serialized_start=825
  _REPLYSETDIVIDENDS._serialized_end=861
  _REQUESTACCEPTJOB._serialized_start=863
  _REQUESTACCEPTJOB._serialized_end=898
  _REPLYACCEPTJOB._serialized_start=900
  _REPLYACCEPTJOB._serialized_end=932
  _REQUESTASSIGNTASK._serialized_start=934
  _REQUESTASSIGNTASK._serialized_end=972
  _REPLYASSIGNTASK._serialized_start=974
  _REPLYASSIGNTASK._serialized_end=1022
  _REQUESTCOMPLETETASK._serialized_start=1024
  _REQUESTCOMPLETETASK._serialized_end=1094
  _REPLYCOMPLETETASK._serialized_start=1096
  _REPLYCOMPLETETASK._serialized_end=1141
  _CHIRALORCHESTRACONDUCTOR._serialized_start=1144
  _CHIRALORCHESTRACONDUCTOR._serialized_end=2078
# @@protoc_insertion_point(module_scope)
