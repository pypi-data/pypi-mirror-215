# Modified from https://github.com/github/gitignore/blob/master/Python.gitignore

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# discover-specific files
disc.pkl
data/all_results.pkl
data/all_struct_dicts.pkl
data/elast_results.pkl
data/elast_struct_dicts.pkl
models/trained_models/example_materials_property.pth
models/trained_models/test-property.pth# conda smithy ci-skeleton start
*.pyc

build_artifacts
# conda smithy ci-skeleton end
models/trained_models/test-property.pth
mat_discover-feedstock/
scratch/
**/test-property.pth
mat_discover/data/all_results.pkl
mat_discover/data/elast_results.pkl
mat_discover/data/elast_struct_dicts.pkl
mat_discover/data/elasticity/**
dummy_disc.pkl
examples/tables/**
examples/figures/**
!examples/figures/cluster-example-output.png
examples/models/**
examples/hyperparameter_combinations/hyperparameter_combinations.ipynb
mat_discover/data/thermoelectric-train.csv
mat_discover/data/train.xlsx
mat_discover/data/val.xlsx
figures/dummy/**/*
tables/dummy/**/*
temp-plot.html
models/trained_models/UnnamedModel.pth
figures/lc_data/UnnamedModel_lc.csv
examples/supercon.csv
examples/super_con_mat_discover_pypi.ipynb
examples/super_con_mat_discover.py
matbench_kvrh_comp_similarity.csv
matbench_kvrh_grid_similarity.csv
matbench_kvrh_total_similarity.csv
