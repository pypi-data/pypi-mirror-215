Metadata-Version: 2.1
Name: airontools
Version: 0.1.20
Summary: Machine learning tools to complement the AIronSuit package.
Home-page: https://github.com/AtrejuArtax/airontools
Author: Claudi Ruiz Camps
Author-email: claudi_ruiz@hotmail.com
License: BSD
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: sklearn
Requires-Dist: tensorflow (==2.7.0)
Requires-Dist: tensorboard (==2.7.0)

# AIronTools

AIronTools (Beta) is a Python library that provides the user with deep learning tools built to work with 
[tensorflow](https://github.com/tensorflow/tensorflow) as a backend.

Key features:

1. Model constructor that allows multiple models to be optimized in parallel across multiple GPUs. 
2. Block constructor to build customised blocks/models.
3. Layer constructor to build customised layers.
4. Preprocessing utils.
   
### Installation

`pip install airontools`

### Custom Keras subclass to build a variational autoencoder (VAE) with airontools and compatible with aironsuit

``` python
import numpy as np
from numpy.random import normal
from tensorflow.keras.optimizers import Adam

from airontools.constructors.models.unsupervised.vae import VAE


tabular_data = np.concatenate(
    [
        normal(loc=0.5, scale=1, size=(100, 10)),
        normal(loc=-0.5, scale=1, size=(100, 10)),
    ]
)
model = VAE(
        input_shape=tabular_data.shape[1:],
        latent_dim=3,
)
model.compile(optimizer=Adam(learning_rate=0.001))
model.fit(
    tabular_data,
    epochs=10,
)
print("VAE evaluation:", float(model.evaluate(tabular_data)["loss"]))
```

### More examples

see usage examples in [aironsuit/examples](https://github.com/AtrejuArtax/aironsuit/tree/master/examples)
