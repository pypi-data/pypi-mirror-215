[tool.poetry]
name = "django-choices-field"
version = "2.2.2"
description = "Django field that set/get django's new TextChoices/IntegerChoices enum."
authors = ["Thiago Bellini Ribeiro <thiago@bellini.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/bellini666/django-choices-field"
repository = "https://github.com/bellini666/django-choices-field"
documentation = "https://django-choices-field.readthedocs.io"
keywords = ["django", "enum"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Framework :: Django",
  "Framework :: Django :: 3.2",
  "Framework :: Django :: 4.0",
  "Framework :: Django :: 4.1",
  "Framework :: Django :: 4.2",
]
packages = [{ include = "django_choices_field" }]

[tool.poetry.dependencies]
python = ">=3.7"
django = ">=3.2"
typing_extensions = ">=4.0.0"

[tool.poetry.dev-dependencies]
black = "^23.3.0"
codecov = "^2.1.11"
django = "^4.0"
django-types = "^0.17.0"
pytest = "^7.1.2"
pytest-cov = "^4.0.0"
pytest-django = "^4.2.0"
ruff = "^0.0.274"

[tool.black]
line-length = 100
target-version = ['py37']
preview = true
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | __pycached__
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
select = [
  "E",
  "F",
  "W",
  "I",
  "N",
  "D",
  "UP",
  "YTT",
  "D2",
  "D3",
  "D4",
  "BLE",
  "B",
  "A",
  "COM",
  "C4",
  "DTZ",
  "T10",
  "EXE",
  "ISC",
  "ICN001",
  "G",
  "INP",
  "PIE",
  "T20",
  "PYI",
  "PT",
  "Q",
  "RET",
  "SIM",
  "TID",
  "TCH",
  "PTH",
  "ERA",
  "PGH",
  "PL",
  "RSE",
  "RUF",
  "TRY",
  "SLF",
]
ignore = [
  "D1",
  "D203",
  "D213",
  "TCH001",
  "TCH002",
  "TCH003",
  "PGH003",
  "PLR09",
  "PLR2004",
  "SLF001",
  "TRY003",
]
target-version = "py37"
exclude = [
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".tox",
  ".venv",
  "__pycached__",
  "_build",
  "buck-out",
  "build",
  "dist",
]

[tool.ruff.isort]

[tool.ruff.pydocstyle]
convention = "google"

[tool.pyright]
pythonVersion = "3.7"
useLibraryCodeForTypes = true
venvPath = "."
venv = ".venv"
ignore = ["**/migrations"]
reportCallInDefaultInitializer = "warning"
reportMatchNotExhaustive = "warning"
reportMissingSuperCall = "warning"
reportOverlappingOverload = "warning"
reportUninitializedInstanceVariable = "none"
reportUnnecessaryCast = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUntypedNamedTuple = "error"
reportUnusedExpression = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryContains = "warning"
strictDictionaryInference = true
strictListInference = true
strictSetInference = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = "tests/test_*.py"
addopts = "--cov=./ -vv"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
