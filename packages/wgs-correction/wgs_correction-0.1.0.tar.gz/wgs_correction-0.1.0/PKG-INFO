Metadata-Version: 2.1
Name: wgs-correction
Version: 0.1.0
Summary: wgs_correction
Home-page: https://github.com/zheuziihau
License: MIT
Keywords: WGS,GCJ,BD09
Author: kwtk
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: AsyncIO
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Requires-Dist: fiona (>=1.9.4.post1,<2.0.0)
Project-URL: Repository, https://github.com/zheuziihau/WGS_correction
Description-Content-Type: text/markdown

# WGS84坐标纠正工具


## 功能

用于将定义为WGS_1984坐标系，但实际坐标为bd09或gcj02的shapefile纠正到WGS_1984坐标系下

以解决从高德/百度平台获取数据时忘记进行坐标矫正后，可能出现的问题

## Python库

### 安装
由于fiona依赖问题，仅支持Python>=3.8版本

在pip中安装
```shell
pip install wgs_correction
```

### 使用
#### 一般使用
```python
import wgs_correction as wgsc
input_shp = ''
output_shp = ''
# 纠正高德坐标
wgsc.correct(input_shp, output_shp, 'gd')
# 纠正百度坐标
wgsc.correct(input_shp, output_shp, 'bd')
```
#### 高级使用
自定义纠正函数。纠正函数的参数、返回值都必须是两个

示例中，定义了t_func，以将整个shapefile的经纬度都加1
```python
import wgs_correction as wgsc

def t_func(x, y):
    return x + 1, y + 1

input_shp = ''
output_shp = ''
# 纠正高德坐标
wgsc.correct_core(input_shp, output_shp, t_func)
```



## ArcGIS Pro 工具箱

将wgs_correction_tool.pyt添加至ArcGIS Pro工程中，直接使用即可

考虑到兼容性问题，工具箱逐个读取坐标、逐个转换，没有用numpy，速度比wgs_correction库更慢

如果要转换比较大的数据，建议适用wgs_correction库
