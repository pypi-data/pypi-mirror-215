[build-system]
    requires = ["setuptools>=61.0.0", "wheel"]
    build-backend = "setuptools.build_meta"

[project]
    name = "bob.pad.base"
    version = "6.0.1b0"
    requires-python = ">=3.9"
    description = "A framework for executing the chain of presentation attack detection (PAD) experiments"
    dynamic = ["readme"]
    license = {text = "GPLv3 License"}
    authors = [
    {name = "Pavel Korshunov"},
    {email = "pavel.korshunov@idiap.ch"},
    ]
    keywords = ["PAD framework", "grid support", "pipeline organization"]

    classifiers=[
        "Framework :: Bob",
        "Development Status :: 3 - Alpha",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
        "Natural Language :: English",
        "Programming Language :: Python",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
    ]
    dependencies = [
        "bob",
        "bob.io.base",
        "bob.measure",
        "bob.pipelines",
        "bob.bio.base",
        "clapper",
        "click",
        "click-plugins",
        "dask",
        "matplotlib",
        "numpy",
        "scikit-learn",
        "scipy",
        "sqlalchemy",
        "tabulate",
    ]

[project.urls]
    documentation = "https://www.idiap.ch/software/bob/docs/bob/bob.pad.base/master/sphinx/"
    homepage = "https://pypi.org/project/bob.pad.base/"
    repository = "https://gitlab.idiap.ch/bob/bob.pad.base"
    changelog = "https://gitlab.idiap.ch/bob/bob.pad.base/-/releases"

[project.optional-dependencies]
    qa = ["pre-commit"]
    doc = [
        "sphinx",
        "sphinx_rtd_theme",
        "sphinx-autodoc-typehints",
        "auto-intersphinx",
        "sphinxcontrib-programoutput",
        "matplotlib",
        ]
    test = [
        "pytest",
        "pytest-cov",
        "coverage",
        ]

[tool.setuptools]
    zip-safe = false
    package-dir = {"" = "src"}

[tool.setuptools.dynamic]
    readme = {file = "README.md", content-type = "text/markdown"}

[project.entry-points."bob.cli"]
    pad               = "bob.pad.base.script.pad:pad"

[project.entry-points."bob.pad.cli"]
    metrics          = "bob.pad.base.script.pad_commands:metrics"
    multi-metrics    = "bob.pad.base.script.pad_commands:multi_metrics"
    hist             = "bob.pad.base.script.pad_commands:hist"
    det              = "bob.pad.base.script.pad_commands:det"
    roc              = "bob.pad.base.script.pad_commands:roc"
    epc              = "bob.pad.base.script.pad_commands:epc"
    gen              = "bob.pad.base.script.pad_commands:gen"
    evaluate         = "bob.pad.base.script.pad_commands:evaluate"
    cross            = "bob.pad.base.script.cross:cross"
    finalize-scores  = "bob.pad.base.script.finalize_scores:finalize_scores"
    run-pipeline     = "bob.pad.base.script.run_pipeline:run_pipeline"

[tool.distutils.bdist_wheel]
    universal = true
[tool.isort]
    profile = "black"
    line_length = 80
    order_by_type = true
    lines_between_types = 1

[tool.black]
    line-length = 80

[tool.pytest.ini_options]
    addopts = [
        "--import-mode=append",
        "--cov-report=term-missing",
        "--cov=bob.pad.base",
    ]
    junit_logging = "all"
    junit_log_passing_tests = false
