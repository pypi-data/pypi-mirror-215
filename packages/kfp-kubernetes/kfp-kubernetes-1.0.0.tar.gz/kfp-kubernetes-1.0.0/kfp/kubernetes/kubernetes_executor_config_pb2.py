# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kubernetes_executor_config.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n kubernetes_executor_config.proto\x12\x0ekfp_kubernetes\x1a\x1cgoogle/protobuf/struct.proto\"\xea\x01\n\x18KubernetesExecutorConfig\x12\x38\n\x10secret_as_volume\x18\x01 \x03(\x0b\x32\x1e.kfp_kubernetes.SecretAsVolume\x12\x32\n\rsecret_as_env\x18\x02 \x03(\x0b\x32\x1b.kfp_kubernetes.SecretAsEnv\x12+\n\tpvc_mount\x18\x03 \x03(\x0b\x32\x18.kfp_kubernetes.PvcMount\x12\x33\n\rnode_selector\x18\x04 \x01(\x0b\x32\x1c.kfp_kubernetes.NodeSelector\"9\n\x0eSecretAsVolume\x12\x13\n\x0bsecret_name\x18\x01 \x01(\t\x12\x12\n\nmount_path\x18\x02 \x01(\t\"\x9f\x01\n\x0bSecretAsEnv\x12\x13\n\x0bsecret_name\x18\x01 \x01(\t\x12\x41\n\nkey_to_env\x18\x02 \x03(\x0b\x32-.kfp_kubernetes.SecretAsEnv.SecretKeyToEnvMap\x1a\x38\n\x11SecretKeyToEnvMap\x12\x12\n\nsecret_key\x18\x01 \x01(\t\x12\x0f\n\x07\x65nv_var\x18\x02 \x01(\t\"N\n\x17TaskOutputParameterSpec\x12\x15\n\rproducer_task\x18\x01 \x01(\t\x12\x1c\n\x14output_parameter_key\x18\x02 \x01(\t\"\xb2\x01\n\x08PvcMount\x12H\n\x15task_output_parameter\x18\x01 \x01(\x0b\x32\'.kfp_kubernetes.TaskOutputParameterSpecH\x00\x12\x12\n\x08\x63onstant\x18\x02 \x01(\tH\x00\x12#\n\x19\x63omponent_input_parameter\x18\x03 \x01(\tH\x00\x12\x12\n\nmount_path\x18\x04 \x01(\tB\x0f\n\rpvc_reference\"\xe4\x01\n\tCreatePvc\x12\x12\n\x08pvc_name\x18\x01 \x01(\tH\x00\x12\x19\n\x0fpvc_name_suffix\x18\x02 \x01(\tH\x00\x12\x14\n\x0c\x61\x63\x63\x65ss_modes\x18\x03 \x03(\t\x12\x0c\n\x04size\x18\x04 \x01(\t\x12\x1d\n\x15\x64\x65\x66\x61ult_storage_class\x18\x05 \x01(\x08\x12\x1a\n\x12storage_class_name\x18\x06 \x01(\t\x12\x13\n\x0bvolume_name\x18\x07 \x01(\t\x12,\n\x0b\x61nnotations\x18\x08 \x01(\x0b\x32\x17.google.protobuf.StructB\x06\n\x04name\"\x9f\x01\n\tDeletePvc\x12H\n\x15task_output_parameter\x18\x01 \x01(\x0b\x32\'.kfp_kubernetes.TaskOutputParameterSpecH\x00\x12\x12\n\x08\x63onstant\x18\x02 \x01(\tH\x00\x12#\n\x19\x63omponent_input_parameter\x18\x03 \x01(\tH\x00\x42\x0f\n\rpvc_reference\"w\n\x0cNodeSelector\x12\x38\n\x06labels\x18\x01 \x03(\x0b\x32(.kfp_kubernetes.NodeSelector.LabelsEntry\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42IZGgithub.com/kubeflow/pipelines/kubernetes_platform/go/kubernetesplatformb\x06proto3')



_KUBERNETESEXECUTORCONFIG = DESCRIPTOR.message_types_by_name['KubernetesExecutorConfig']
_SECRETASVOLUME = DESCRIPTOR.message_types_by_name['SecretAsVolume']
_SECRETASENV = DESCRIPTOR.message_types_by_name['SecretAsEnv']
_SECRETASENV_SECRETKEYTOENVMAP = _SECRETASENV.nested_types_by_name['SecretKeyToEnvMap']
_TASKOUTPUTPARAMETERSPEC = DESCRIPTOR.message_types_by_name['TaskOutputParameterSpec']
_PVCMOUNT = DESCRIPTOR.message_types_by_name['PvcMount']
_CREATEPVC = DESCRIPTOR.message_types_by_name['CreatePvc']
_DELETEPVC = DESCRIPTOR.message_types_by_name['DeletePvc']
_NODESELECTOR = DESCRIPTOR.message_types_by_name['NodeSelector']
_NODESELECTOR_LABELSENTRY = _NODESELECTOR.nested_types_by_name['LabelsEntry']
KubernetesExecutorConfig = _reflection.GeneratedProtocolMessageType('KubernetesExecutorConfig', (_message.Message,), {
  'DESCRIPTOR' : _KUBERNETESEXECUTORCONFIG,
  '__module__' : 'kubernetes_executor_config_pb2'
  # @@protoc_insertion_point(class_scope:kfp_kubernetes.KubernetesExecutorConfig)
  })
_sym_db.RegisterMessage(KubernetesExecutorConfig)

SecretAsVolume = _reflection.GeneratedProtocolMessageType('SecretAsVolume', (_message.Message,), {
  'DESCRIPTOR' : _SECRETASVOLUME,
  '__module__' : 'kubernetes_executor_config_pb2'
  # @@protoc_insertion_point(class_scope:kfp_kubernetes.SecretAsVolume)
  })
_sym_db.RegisterMessage(SecretAsVolume)

SecretAsEnv = _reflection.GeneratedProtocolMessageType('SecretAsEnv', (_message.Message,), {

  'SecretKeyToEnvMap' : _reflection.GeneratedProtocolMessageType('SecretKeyToEnvMap', (_message.Message,), {
    'DESCRIPTOR' : _SECRETASENV_SECRETKEYTOENVMAP,
    '__module__' : 'kubernetes_executor_config_pb2'
    # @@protoc_insertion_point(class_scope:kfp_kubernetes.SecretAsEnv.SecretKeyToEnvMap)
    })
  ,
  'DESCRIPTOR' : _SECRETASENV,
  '__module__' : 'kubernetes_executor_config_pb2'
  # @@protoc_insertion_point(class_scope:kfp_kubernetes.SecretAsEnv)
  })
_sym_db.RegisterMessage(SecretAsEnv)
_sym_db.RegisterMessage(SecretAsEnv.SecretKeyToEnvMap)

TaskOutputParameterSpec = _reflection.GeneratedProtocolMessageType('TaskOutputParameterSpec', (_message.Message,), {
  'DESCRIPTOR' : _TASKOUTPUTPARAMETERSPEC,
  '__module__' : 'kubernetes_executor_config_pb2'
  # @@protoc_insertion_point(class_scope:kfp_kubernetes.TaskOutputParameterSpec)
  })
_sym_db.RegisterMessage(TaskOutputParameterSpec)

PvcMount = _reflection.GeneratedProtocolMessageType('PvcMount', (_message.Message,), {
  'DESCRIPTOR' : _PVCMOUNT,
  '__module__' : 'kubernetes_executor_config_pb2'
  # @@protoc_insertion_point(class_scope:kfp_kubernetes.PvcMount)
  })
_sym_db.RegisterMessage(PvcMount)

CreatePvc = _reflection.GeneratedProtocolMessageType('CreatePvc', (_message.Message,), {
  'DESCRIPTOR' : _CREATEPVC,
  '__module__' : 'kubernetes_executor_config_pb2'
  # @@protoc_insertion_point(class_scope:kfp_kubernetes.CreatePvc)
  })
_sym_db.RegisterMessage(CreatePvc)

DeletePvc = _reflection.GeneratedProtocolMessageType('DeletePvc', (_message.Message,), {
  'DESCRIPTOR' : _DELETEPVC,
  '__module__' : 'kubernetes_executor_config_pb2'
  # @@protoc_insertion_point(class_scope:kfp_kubernetes.DeletePvc)
  })
_sym_db.RegisterMessage(DeletePvc)

NodeSelector = _reflection.GeneratedProtocolMessageType('NodeSelector', (_message.Message,), {

  'LabelsEntry' : _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), {
    'DESCRIPTOR' : _NODESELECTOR_LABELSENTRY,
    '__module__' : 'kubernetes_executor_config_pb2'
    # @@protoc_insertion_point(class_scope:kfp_kubernetes.NodeSelector.LabelsEntry)
    })
  ,
  'DESCRIPTOR' : _NODESELECTOR,
  '__module__' : 'kubernetes_executor_config_pb2'
  # @@protoc_insertion_point(class_scope:kfp_kubernetes.NodeSelector)
  })
_sym_db.RegisterMessage(NodeSelector)
_sym_db.RegisterMessage(NodeSelector.LabelsEntry)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'ZGgithub.com/kubeflow/pipelines/kubernetes_platform/go/kubernetesplatform'
  _NODESELECTOR_LABELSENTRY._options = None
  _NODESELECTOR_LABELSENTRY._serialized_options = b'8\001'
  _KUBERNETESEXECUTORCONFIG._serialized_start=83
  _KUBERNETESEXECUTORCONFIG._serialized_end=317
  _SECRETASVOLUME._serialized_start=319
  _SECRETASVOLUME._serialized_end=376
  _SECRETASENV._serialized_start=379
  _SECRETASENV._serialized_end=538
  _SECRETASENV_SECRETKEYTOENVMAP._serialized_start=482
  _SECRETASENV_SECRETKEYTOENVMAP._serialized_end=538
  _TASKOUTPUTPARAMETERSPEC._serialized_start=540
  _TASKOUTPUTPARAMETERSPEC._serialized_end=618
  _PVCMOUNT._serialized_start=621
  _PVCMOUNT._serialized_end=799
  _CREATEPVC._serialized_start=802
  _CREATEPVC._serialized_end=1030
  _DELETEPVC._serialized_start=1033
  _DELETEPVC._serialized_end=1192
  _NODESELECTOR._serialized_start=1194
  _NODESELECTOR._serialized_end=1313
  _NODESELECTOR_LABELSENTRY._serialized_start=1268
  _NODESELECTOR_LABELSENTRY._serialized_end=1313
# @@protoc_insertion_point(module_scope)
