Metadata-Version: 2.1
Name: ppqueue
Version: 0.3.0
Summary: Parallel Process Queue (ppqueue) for Python
Author-email: Donald Mellenbruch <hello@Fresh2.dev>
License: Copyright 2023 Donald Mellenbruch
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Project-URL: Homepage, https://www.Fresh2.dev/code/r/ppqueue/i
Project-URL: Repository, https://www.github.com/fresh2dev/ppqueue
Project-URL: Funding, https://www.Fresh2.dev/funding
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: tqdm (==4.*)
Requires-Dist: typing-extensions ; python_version < "3.10"
Provides-Extra: dev
Requires-Dist: python-lsp-server[rope] (==1.*) ; extra == 'dev'
Requires-Dist: pylint (==2.*) ; extra == 'dev'
Requires-Dist: pylint-pytest (==1.*) ; extra == 'dev'
Requires-Dist: mypy[reports] (==0.*) ; extra == 'dev'
Requires-Dist: ruff (==0.*) ; extra == 'dev'
Requires-Dist: black[jupyter] (==23.*) ; extra == 'dev'
Requires-Dist: isort (==5.*) ; extra == 'dev'
Requires-Dist: bump2version (==1.*) ; extra == 'dev'
Requires-Dist: pdbpp ; extra == 'dev'
Requires-Dist: ipykernel ; extra == 'dev'
Requires-Dist: ipywidgets ; extra == 'dev'
Requires-Dist: ipython ; extra == 'dev'
Provides-Extra: docs
Requires-Dist: mkdocs (==1.*) ; extra == 'docs'
Requires-Dist: mkdocs-material (==9.*) ; extra == 'docs'
Requires-Dist: mkdocs-jupyter (==0.24.*) ; extra == 'docs'
Requires-Dist: mkdocstrings[python] (==0.20.*) ; extra == 'docs'
Requires-Dist: mkdocs-autorefs (==0.*) ; extra == 'docs'
Requires-Dist: mkdocs-include-dir-to-nav (==1.*) ; extra == 'docs'
Provides-Extra: extras
Requires-Dist: pandas (<=2,>=1) ; extra == 'extras'
Requires-Dist: plotnine (==0.*) ; extra == 'extras'
Provides-Extra: plot
Requires-Dist: pandas (<=2,>=1) ; extra == 'plot'
Requires-Dist: plotnine (==0.*) ; extra == 'plot'
Provides-Extra: tests
Requires-Dist: pytest (==7.*) ; extra == 'tests'
Requires-Dist: pytest-cov (==4.*) ; extra == 'tests'
Requires-Dist: pytest-html (==3.*) ; extra == 'tests'
Requires-Dist: pytest-sugar (==0.*) ; extra == 'tests'
Requires-Dist: pytest-custom-exit-code (==0.3.*) ; extra == 'tests'
Requires-Dist: pylint (==2.*) ; extra == 'tests'
Requires-Dist: pylint-pytest (==1.*) ; extra == 'tests'
Requires-Dist: packaging (==23.*) ; extra == 'tests'
Requires-Dist: mockish (==0.1.*) ; extra == 'tests'
Requires-Dist: tqdm (==4.*) ; extra == 'tests'
Requires-Dist: pandas (<=2,>=1) ; extra == 'tests'
Requires-Dist: plotnine (==0.*) ; extra == 'tests'

# ppqueue

> Parallel Process Queue (ppqueue) for Python

> Formerly known as `ezpq`

| Links         |                        |
|---------------|------------------------|
| Code Repo     | https://www.github.com/fresh2dev/ppqueue           |
| Mirror Repo   | https://www.Fresh2.dev/code/r/ppqueue        |
| Documentation | https://www.Fresh2.dev/code/r/ppqueue/i           |
| Changelog     | https://www.Fresh2.dev/code/r/ppqueue/i/changelog |
| License       | https://www.Fresh2.dev/code/r/ppqueue/i/license   |
| Funding       | https://www.Fresh2.dev/funding        |

[![GitHub release (latest SemVer)](https://img.shields.io/github/v/release/fresh2dev/ppqueue?color=blue&style=for-the-badge)](https://www.github.com/fresh2dev/ppqueue/releases)
[![GitHub Release Date](https://img.shields.io/github/release-date/fresh2dev/ppqueue?color=blue&style=for-the-badge)](https://www.github.com/fresh2dev/ppqueue/releases)
[![License](https://img.shields.io/github/license/fresh2dev/ppqueue?color=blue&style=for-the-badge)](https://www.Fresh2.dev/code/r/ppqueue/i/license)
[![GitHub issues](https://img.shields.io/github/issues-raw/fresh2dev/ppqueue?color=blue&style=for-the-badge)](https://www.github.com/fresh2dev/ppqueue/issues)
[![GitHub pull requests](https://img.shields.io/github/issues-pr-raw/fresh2dev/ppqueue?color=blue&style=for-the-badge)](https://www.github.com/fresh2dev/ppqueue/pulls)
[![GitHub Repo stars](https://img.shields.io/github/stars/fresh2dev/ppqueue?color=blue&style=for-the-badge)](https://star-history.com/#fresh2dev/ppqueue&Date)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/ppqueue?color=blue&style=for-the-badge)](https://pypi.org/project/ppqueue)
[![Docs Website](https://img.shields.io/website?down_message=unavailable&label=docs&style=for-the-badge&up_color=blue&up_message=available&url=https://www.Fresh2.dev/code/r/ppqueue/i)](https://www.Fresh2.dev/code/r/ppqueue/i)
[![Coverage Website](https://img.shields.io/website?down_message=unavailable&label=coverage&style=for-the-badge&up_color=blue&up_message=available&url=https://www.Fresh2.dev/code/r/ppqueue/i/tests/coverage)](https://www.Fresh2.dev/code/r/ppqueue/i/tests/coverage)
[![Funding](https://img.shields.io/badge/funding-%24%24%24-blue?style=for-the-badge)](https://www.Fresh2.dev/funding)


## Overview

`ppqueue` is a Python module that serves as an abstraction layer to both `multiprocessing.Process` and `threading.Thread`. I built `ppqueue` because I too often notice that parallelizing code results in *ugly* code. With this simple Queue, you can parallelize code easily and attractively. ppqueue offers:

- a single API for parallel execution using processes or threads.
- FIFO priority queueing.
- Gantt charts of job execution (thanks `plotnine` + `pandas`)
- progress bars (thanks to `tqdm`)

![](https://img.fresh2.dev/1687407526_84b23a13b5f.svg)

## Install

Install from PyPi:

```python
pip install ppqueue[plot]
```

## Examples

An notebook of examples is available at:

https://www.f2dv.com/code/r/ppqueue/i/page/examples/

And more examples are provided in the reference docs:

https://www.f2dv.com/code/r/ppqueue/i/reference/

---

*Brought to you by...*

<a href="https://www.fresh2.dev"><img src="https://img.fresh2.dev/fresh2dev.svg" style="filter: invert(50%);"></img></a>
