# (generated with --quick)

import pytest
import torch as th
from typing import Any

test_discrete_env: Any

def make_atari_env(env_id: str = ..., num_envs: int = ..., device: str = ..., seed: int = ..., frame_stack: int = ..., distributed: bool = ...) -> Any: ...
def make_bullet_env(env_id: str = ..., num_envs: int = ..., device: str = ..., seed: int = ..., distributed: bool = ...) -> Any: ...
def make_dmc_env(env_id: str = ..., num_envs: int = ..., device: str = ..., seed: int = ..., visualize_reward: bool = ..., from_pixels: bool = ..., height: int = ..., width: int = ..., frame_stack: int = ..., action_repeat: int = ...) -> Any: ...
def make_minigrid_env(env_id: str = ..., num_envs: int = ..., fully_observable: bool = ..., seed: int = ..., frame_stack: int = ..., device: str = ..., distributed: bool = ...) -> Any: ...
def make_procgen_env(env_id: str = ..., num_envs: int = ..., device: str = ..., seed: int = ..., gamma: float = ..., num_levels: int = ..., start_level: int = ..., distribution_mode: str = ...) -> Any: ...
def make_robosuite_env(env_id: str = ..., num_envs: int = ..., device: str = ..., seed: int = ..., distributed: bool = ..., has_renderer: bool = ..., has_offscreen_renderer: bool = ..., use_camera_obs: bool = ...) -> Any: ...
