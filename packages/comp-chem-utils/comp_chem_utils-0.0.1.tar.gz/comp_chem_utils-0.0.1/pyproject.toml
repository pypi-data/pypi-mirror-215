[tool.poetry]
name = "comp-chem-utils"
version = "0.0.1"
description = "Utilities for computational catalysis."
authors = [
    "Ugochukwu Nwosu <ugognw@gmail.com>"
    ]
license = "MIT"
readme = "README.rst"
repository = "https://gitlab.com/ugognw/python-comp-chem-utils"
documentation = "https://python-comp-chem-utils.readthedocs.io/"
keywords = ['computational chemistry', 'catalysis', 'comp-chem-utils']
packages = [
    { include = "ccu", from = "src" }
]
include = [
    "AUTHORS.rst",
    "CHANGELOG.rst",
    "CONTRIBUTING.rst",
    "LICENSE",
    "MANIFEST.in",
    "README.rst"
    ]
exclude = ["tests"]
classifiers = [
    "Programming Language :: Python :: 3.11",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
click = "*"
numpy = "^1.24.2"
ase = "^3.22.1"
scipy = "^1.10.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
black = "*"
isort = "^5.10.1"
pyright = "*"
flake8 = "^6.0.0"
pylint = "^2.15.0"
bandit = "^1.7.4"
pyupgrade = "^3.6.0"
autoflake = "^2.1.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.1.2"
tox = "^3.26.0"
coverage = "^7.2.7"
pytest-datadir = "^1.4.1"
pytest-xdist = "^3.2.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.vcs.dependencies]
pre-commit = "^2.20.0"
bump2version = "^1.0.1"
gitchangelog = "^3.0.4"

[tool.poetry.group.vcs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.0.1"
furo = "^2023.5.20"

[tool.poetry.group.docs]
optional = true

[tool.poetry.scripts]
ccu = 'ccu.cli.main:main'

[tool.black]
line-length = 79
target-version = ['py311']
skip-string-normalization = true

[tool.isort]
profile = 'black'
single_line_exclusions = ["typing"]
force_single_line = true
force_sort_within_sections = true
lexicographical = true
order_by_type = false
group_by_package = true
line_length = 79
known_first_party = ["ccu"]
skip = [".tox", ".eggs", "ci/templates", "build", "dist"]
py_version = "auto"

[tool.pytest.ini_options]
filterwarnings = "error"
norecursedirs = "migrations"
python_files = [
    "test_*.py",
    "*_test.py",
    "tests.py"
]
testpaths = "tests"
addopts = "--import-mode=importlib -ra --strict-markers --doctest-modules --doctest-glob=*.rst --tb=short"
markers = [
    "rotation_angle: specify the angle to be used for a Rotation fixture"
]

[tool.bandit.assert_used]
skips = ['*test_*.py', '*_test.py']

[tool.autoflake]
check = true
remove-all-unused-imports = true
ignore-init-module-imports = true
in-place = true
remove-duplicate-keys = true
remove-unused-variables = true

[tool.coverage.run]
command_line = 'pytest'
branch = true
source = [
    'ccu',
    'tests'
]
parallel = true

[tool.coverage.paths]
source =[
   'src',
   '*/site-packages'
]

[tool.coverage.report]
show_missing = true
precision = 2
omit = ['*migrations*']
