# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from boids_api.boids.base_model_ import Model
from boids_api import util


class WorldConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, width=None, height=None):  # noqa: E501
        """WorldConfig - a model defined in OpenAPI

        :param width: The width of this WorldConfig.  # noqa: E501
        :type width: int
        :param height: The height of this WorldConfig.  # noqa: E501
        :type height: int
        """
        self.openapi_types = {
            'width': int,
            'height': int
        }

        self.attribute_map = {
            'width': 'width',
            'height': 'height'
        }

        self._width = width
        self._height = height

    @classmethod
    def from_dict(cls, dikt) -> 'WorldConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WorldConfig of this WorldConfig.  # noqa: E501
        :rtype: WorldConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def width(self):
        """Gets the width of this WorldConfig.


        :return: The width of this WorldConfig.
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this WorldConfig.


        :param width: The width of this WorldConfig.
        :type width: int
        """
        if width is None:
            raise ValueError("Invalid value for `width`, must not be `None`")  # noqa: E501

        self._width = width

    @property
    def height(self):
        """Gets the height of this WorldConfig.


        :return: The height of this WorldConfig.
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this WorldConfig.


        :param height: The height of this WorldConfig.
        :type height: int
        """
        if height is None:
            raise ValueError("Invalid value for `height`, must not be `None`")  # noqa: E501

        self._height = height
