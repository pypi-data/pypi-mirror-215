# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from boids_api.boids.base_model_ import Model
from boids_api.boids.boids_config import BoidsConfig
from boids_api.boids.world_config import WorldConfig
from boids_api import util

from boids_api.boids.boids_config import BoidsConfig  # noqa: E501
from boids_api.boids.world_config import WorldConfig  # noqa: E501

class SimulationConfigUpdateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, world_config=None, boids_config=None):  # noqa: E501
        """SimulationConfigUpdateRequest - a model defined in OpenAPI

        :param world_config: The world_config of this SimulationConfigUpdateRequest.  # noqa: E501
        :type world_config: WorldConfig
        :param boids_config: The boids_config of this SimulationConfigUpdateRequest.  # noqa: E501
        :type boids_config: BoidsConfig
        """
        self.openapi_types = {
            'world_config': WorldConfig,
            'boids_config': BoidsConfig
        }

        self.attribute_map = {
            'world_config': 'world_config',
            'boids_config': 'boids_config'
        }

        self._world_config = world_config
        self._boids_config = boids_config

    @classmethod
    def from_dict(cls, dikt) -> 'SimulationConfigUpdateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SimulationConfigUpdateRequest of this SimulationConfigUpdateRequest.  # noqa: E501
        :rtype: SimulationConfigUpdateRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def world_config(self):
        """Gets the world_config of this SimulationConfigUpdateRequest.


        :return: The world_config of this SimulationConfigUpdateRequest.
        :rtype: WorldConfig
        """
        return self._world_config

    @world_config.setter
    def world_config(self, world_config):
        """Sets the world_config of this SimulationConfigUpdateRequest.


        :param world_config: The world_config of this SimulationConfigUpdateRequest.
        :type world_config: WorldConfig
        """

        self._world_config = world_config

    @property
    def boids_config(self):
        """Gets the boids_config of this SimulationConfigUpdateRequest.


        :return: The boids_config of this SimulationConfigUpdateRequest.
        :rtype: BoidsConfig
        """
        return self._boids_config

    @boids_config.setter
    def boids_config(self, boids_config):
        """Sets the boids_config of this SimulationConfigUpdateRequest.


        :param boids_config: The boids_config of this SimulationConfigUpdateRequest.
        :type boids_config: BoidsConfig
        """

        self._boids_config = boids_config
