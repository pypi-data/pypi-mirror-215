# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from boids_api.boids.base_model_ import Model
from boids_api.boids.simulation_state import SimulationState
from boids_api import util

from boids_api.boids.simulation_state import SimulationState  # noqa: E501

class SimulationControlUpdateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, state=None, rate=None):  # noqa: E501
        """SimulationControlUpdateRequest - a model defined in OpenAPI

        :param state: The state of this SimulationControlUpdateRequest.  # noqa: E501
        :type state: SimulationState
        :param rate: The rate of this SimulationControlUpdateRequest.  # noqa: E501
        :type rate: float
        """
        self.openapi_types = {
            'state': SimulationState,
            'rate': float
        }

        self.attribute_map = {
            'state': 'state',
            'rate': 'rate'
        }

        self._state = state
        self._rate = rate

    @classmethod
    def from_dict(cls, dikt) -> 'SimulationControlUpdateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SimulationControlUpdateRequest of this SimulationControlUpdateRequest.  # noqa: E501
        :rtype: SimulationControlUpdateRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state(self):
        """Gets the state of this SimulationControlUpdateRequest.


        :return: The state of this SimulationControlUpdateRequest.
        :rtype: SimulationState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this SimulationControlUpdateRequest.


        :param state: The state of this SimulationControlUpdateRequest.
        :type state: SimulationState
        """

        self._state = state

    @property
    def rate(self):
        """Gets the rate of this SimulationControlUpdateRequest.


        :return: The rate of this SimulationControlUpdateRequest.
        :rtype: float
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this SimulationControlUpdateRequest.


        :param rate: The rate of this SimulationControlUpdateRequest.
        :type rate: float
        """

        self._rate = rate
