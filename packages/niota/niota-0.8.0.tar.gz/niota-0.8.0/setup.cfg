[metadata]
name = niota
version = 0.8.0
author = Numbers Co., Inc
author_email = hi@numbersprotocol.io
description = Numbers IOTA tool
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/numbersprotocol/niota
classifiers = 
	Development Status :: 4 - Beta
	License :: OSI Approved :: GNU General Public License v3 (GPLv3)
	Programming Language :: Python :: 3

[options]
package_dir = 
	=src
zip_safe = True
python_requires = >=3.6
packages = find:
install_requires = 
	cryptography
	pycryptodome
	pydantic
	requests

[options.packages.find]
where = src
exclude = docs tests

[options.extras_require]
tests = 
	tox
docs = 
	sphinx

[tool:pytest]
markers = 
	unit
	integration
addopts = --cov=niota --cov-append --cov-report term --cov-report html --cov-config setup.cfg

[coverage:run]
branch = True
source = 
	src
	{env_site_packages_dir}
omit = 
	__init__.py
	test_*.py

[coverage:paths]
source = 
	src
	.tox/**/site-packages

[pylint.message_control]
disable = 
	broad-except,
	import-error,
	invalid-name,
	line-too-long,
	missing-module-docstring,
	missing-class-docstring,
	missing-function-docstring,
	too-few-public-methods,
	too-many-public-methods,
	too-many-arguments,

[autoflake]
in-place = True
remove-all-unused-imports = True
remove-unused-variables = True

[isort]
multi_line_output = 3
include_trailing_comma = True

[yapf]
based_on_style = pep8
column_limit = 120
continuation_indent_width = 4
dedent_closing_brackets = True
indent_width = 4
spaces_before_comment = 2

[flake8]
max-line-length = 120
max-complexity = 10
exclude = .git,__pycache__,__init__.py,.mypy_cache,.pytest_cache,venv,.venv

[pylint]
extension-pkg-whitelist = pydantic

[tox:tox]
envlist = 
	py36, py37, py38, py39, py310, flake8, pylint, bandit

[testenv]
deps = 
	-r {tox_root}/requirements.txt

[testenv:autoflake]
skip_install = true
deps = 
	autoflake
commands = 
	autoflake -r {tox_root}/src

[testenv:isort]
skip_install = true
deps = 
	isort[requirements_deprecated_finder]
commands = 
	isort --atomic {tox_root}/src

[testenv:yapf]
skip_install = true
deps = 
	yapf
commands = 
	yapf -i -r {tox_root}/src

[testenv:test]
deps = 
	pytest
	pytest-cov
	pytest-mock
commands = 
	pytest -m unit

[testenv:test-integration]
deps = 
	pytest
	pytest-cov
	pytest-mock
commands = 
	pytest -m integration

[testenv:report]
deps = coverage
skip_install = true
commands = 
	coverage combine
	coverage report -m
	coverage html

[testenv:clean]
deps = coverage
skip_install = true
commands = 
	coverage erase

[testenv:flake8]
skip_install = true
deps = 
	flake8
commands = 
	flake8 {tox_root}/src --statistics --count --show-source

[testenv:pylint]
skip_install = true
deps = 
	pylint
commands = 
	pylint src

[testenv:bandit]
skip_install = true
deps = 
	bandit
commands = 
	bandit -r src

[egg_info]
tag_build = 
tag_date = 0

