name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
    - main
  release:
    types:
      - published

jobs:
  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - uses: pre-commit/action@v3.0.0
    - name: PyLint
      run: pipx run nox -s pylint

  checks:
    name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.11"]
        runs-on: [ubuntu-latest, macos-latest, windows-latest]

        include:
        - python-version: pypy-3.8
          runs-on: ubuntu-latest


    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install package
      run: python -m pip install ".[test]"

    - name: Test package
      run: python -m pytest

    - name: Install minimum versions
      run: python -m pip install ".[test]" -c tests/constraints.txt

    - name: Test minimum versions
      run: python -m pytest

  pass:
    if: always()
    needs: [checks]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  dist:
    name: Distribution build
    runs-on: ubuntu-latest
    needs: [pre-commit]

    steps:
    - uses: actions/checkout@v3

    - name: Build sdist and wheel
      run: pipx run build

    - uses: actions/upload-artifact@v3
      with:
        path: dist

    - name: Check products
      run: pipx run twine check dist/*

  publish:
    name: Publish
    environment: pypi
    permissions:
      id-token: write
    needs: [dist]
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v3
      with:
        path: dist
        name: artifact

    - uses: pypa/gh-action-pypi-publish@release/v1
